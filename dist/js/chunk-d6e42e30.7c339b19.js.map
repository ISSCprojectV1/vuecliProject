{"version":3,"sources":["webpack:///./src/api/part1/transactionProject.js","webpack:///./src/components/part1/transactionProject/map.vue?eb16","webpack:///src/components/part1/transactionProject/map.vue","webpack:///./src/components/part1/transactionProject/map.vue?03f7","webpack:///./src/components/part1/transactionProject/map.vue?1f03","webpack:///./src/components/part1/transactionProject/map.vue?c700"],"names":["Provinces","console","log","request","url","method","getAllWhiteApi","getAllQingApi","getTaskApi","postTaskDecompositionApi","data","getbendiApi","render","_vm","this","_h","$createElement","_c","_self","staticClass","style","width","height","attrs","staticRenderFns","msg","mounted","drawLine","methods","key","spotCompony","count","barData","i","push","mapData","j","value","geoCoord","geoCoordMap","name","classes","axisType","autoPlay","playInterval","left","right","bottom","label","symbolSize","lineStyle","checkpointStyle","controlStyle","animation","animationDuration","animationEasing","animationDurationUpdate","animationEasingUpdate","grid","tooltip","geo","backgroundColor","title","xAxis","yAxis","series","color","fontSize","Management","legend","component"],"mappings":"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EAEkB,OAAlB,MACkB,MAAlB,CACoB,OAApB,CACsB,MAAtB,EACA,WACwBC,MAAO,OACPC,SAAU,GAElC,UANA,SAMA,GACwB,OAAOC,EAAW5B,OAGtB,SAApB,CACsB,MAAtB,EACsB,SAAtB,GACsB,MAAtB,UACsB,gBAAtB,UACsB,SAAtB,QACsB,UAAtB,QAGkB,WAAlB,GACkB,aAAlB,SACkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,UACsB,QAAtB,IAGkB,KAAlB,GAGgB,CAEE,KAAlB,gBACkB,iBAAlB,MACkB,KAAlB,2BACoB,OAApB,mBACA,aACkB,WAAlB,YACoB,OAApB,SAEkB,aAAlB,SACkB,aAAlB,CACoB,UAApB,UAEkB,gBAAlB,EACkB,MAAlB,CACoB,OAApB,CACsB,UAAtB,MACsB,SAAtB,QACsB,MAAtB,IAGkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,QACsB,WAAtB,GACsB,YAAtB,UAGkB,OAAlB,GAyBgB,CACE,OAAlB,IACkB,KAAlB,MACkB,OAAlB,OACkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,UAGkB,KAAlB,OAGgB6B,OAAQ,CACxB,aACA,QACA,kBACA,UACA,UACA,MACA,CACoB,KAApB,YACoB,KAApB,SACoB,UAApB,CACsB,MAAtB,UACsB,SAAtB,SAOA,eACA,0BAEA,GADA,6BACA,cACA,oBACA,2CACA,uBAEA,iBACA,oBACA,2CACA,8BAiBA,6BACA,kBACU,QAAV,wCCzlB2W,I,wBCQvWC,EAAY,eACd,EACA1D,EACAY,GACA,EACA,KACA,WACA,MAIa,aAAA8C,E,kECnBf,yBAAsgB,EAAG","file":"js/chunk-d6e42e30.7c339b19.js","sourcesContent":["import request from '@/utils/request'\nimport Axios from 'axios';\n\n    // 获取省份信息 \nexport function Provinces() {\n  console.log(\"获取getshengshiApi表格数据 步骤二 发送taskQuery请求 \")\n    return request({\n      url: '/HMM/getShengshi',\n      method: 'get'\n        })\n  }\n  // 获取白名单列表  \n  export function getAllWhiteApi() {\n    console.log(\"获取getAllWhiteApi表格数据 步骤二 发送getAllWhiteApi请求 \")\n      return request({\n        url: '/HMM/getAllWhite',\n        method: 'get'\n          })\n    }\n\n      // 获取清管所列表  \n  export function getAllQingApi() {\n    console.log(\"获取getAllQing表格数据 步骤二 发送getAllQing请求 \")\n      return request({\n        url: '/HMM/getAllQing',\n        method: 'get'\n          })\n    }\n\n    // 获得任务流程图\n    export function getTaskApi() {\n      console.log(\"获取getTaskApi数据\")\n        return request({\n          url: '/task',\n          method: 'get'\n            })\n      }\n\n      // 获得任务分解图\n    export function getTaskDecompositionApi() {\n      console.log(\"获取getTaskDecompositionApi数据\")\n        return request({\n          url: '/taskDecomposition',\n          method: 'get'\n            })\n      }\n\n// 获得分解任务\nexport function postTaskDecompositionApi(data) {\n  console.log(\"发送postTaskDecompositionApi请求\")\n    return request({\n      url: '/taskDecompositionInput',\n      method: 'post',\n      data\n        })\n  }\n// 获得联盟图\nexport function getbendiApi() {\n  console.log(\"发送getbendiApi请求\")\n    return request({\n      url: '/hantina/getbendi',\n      method: 'get'\n        })\n  }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Map\"},[_c('div',{style:({width: '100%', height: '800px'}),attrs:{\"id\":\"map\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"Map\" >\n<div id=\"map\" :style=\"{width: '100%', height: '800px'}\"></div>\n</div>\n</template>>\n\n<script>\nimport $ from 'jQuery'\nimport echarts from 'echarts'\nimport Axios from 'axios';\nimport {getAllQingApi} from \"@/api/part1/transactionProject\";\n\nexport default {\n     name: 'map_geo',\n  data () {\n    return {\n      msg: 'welcome to map'\n    }\n     },\n  mounted(){\n    this.drawLine();\n     },\n  methods: {\n    drawLine(){\nvar Echarts = {};\n \n/***\n * 加载地图\n * @param data\n */\nEcharts.loadData = function (data) {\n \n};\n \n//基于准备好的dom,初始化echarts实例\nvar myChart = echarts.init(document.getElementById('map'));\n// var uploadedDataURL = \"/static/map_json/data-1528971808162-BkOXf61WX.json\";\n// var uploadedDataURL = \"/static/map_json/data-1528969802719-HyXIqhk-m.json\";\nvar uploadedDataURL = \"/map/china.json\";\n//如果想要修改，请点击上方克隆，然后在自己的版本上修改，不要在lz的版本上改！！\n \nvar geoGpsMap = {\n    '1': [109.1162, 34.2004],\n    '2': [116.4551, 40.2539],\n    '3': [113.12244, 23.009505],\n    '4': [87.9236, 43.5883],\n    '5': [127.9688, 45.368],\n    '6': [91.11, 29.97],\n};\n\nvar Management = []\n// 省份坐标\nvar geoCoordMap = {\n    '黑龙江': [127.9688, 45.368],\n    '内蒙古': [110.3467, 41.4899],\n    \"吉林\": [125.8154, 44.2584],\n    '北京市': [116.4551, 40.2539],\n    \"辽宁\": [123.1238, 42.1216],\n    \"河北\": [114.4995, 38.1006],\n    \"天津\": [117.4219, 39.4189],\n    \"山西\": [112.3352, 37.9413],\n    \"陕西\": [109.1162, 34.2004],\n    \"甘肃\": [103.5901, 36.3043],\n    \"宁夏\": [106.3586, 38.1775],\n    \"青海\": [100.4038, 36.8207],\n    \"新疆\": [87.9236, 43.5883],\n    \"西藏\": [91.11, 29.97],\n    \"四川\": [103.9526, 30.7617],\n    \"重庆\": [108.384366, 30.439702],\n    \"山东\": [117.1582, 36.8701],\n    \"河南\": [113.4668, 34.6234],\n    \"江苏\": [118.8062, 31.9208],\n    \"安徽\": [117.29, 32.0581],\n    \"湖北\": [114.3896, 30.6628],\n    \"浙江\": [119.5313, 29.8773],\n    \"福建\": [119.4543, 25.9222],\n    \"江西\": [116.0046, 28.6633],\n    \"湖南\": [113.0823, 28.2568],\n    \"贵州\": [106.6992, 26.7682],\n    \"云南\": [102.9199, 25.4663],\n    \"广东\": [113.12244, 23.009505],\n    \"广西\": [108.479, 23.1152],\n    \"海南\": [110.3893, 19.8516],\n    '上海': [121.4648, 31.2891],\n};\n \nvar colors = [\n    [\"#1DE9B6\", \"#F46E36\", \"#04B9FF\", \"#5DBD32\", \"#FFC809\", \"#FB95D5\", \"#BDA29A\", \"#6E7074\", \"#546570\", \"#C4CCD3\"],\n    [\"#37A2DA\", \"#67E0E3\", \"#32C5E9\", \"#9FE6B8\", \"#FFDB5C\", \"#FF9F7F\", \"#FB7293\", \"#E062AE\", \"#E690D1\", \"#E7BCF3\", \"#9D96F5\", \"#8378EA\", \"#8378EA\"],\n    [\"#DD6B66\", \"#759AA0\", \"#E69D87\", \"#8DC1A9\", \"#EA7E53\", \"#EEDD78\", \"#73A373\", \"#73B9BC\", \"#7289AB\", \"#91CA8C\", \"#F49F42\"],\n];\n \nvar colorIndex = 0;\n\n   \n   //var companyVal =[];\n   //companyVal = this.companyData;\n   //console.log(\"companyVal的内容是\" + companyVal);\n   //var equityCompany = [];\n   //equityCompany = companyVal[0].value;\n   //console.log(\"equityCompany的内容是\" + equityCompany);\n\n\n$(function () {\n    var classes = [\"权益类公司\", \"现货类公司\"];\n    var mapData = [\n        [],\n        [],\n    ];\n    var companyVal = [];\n    var equityCompany = []; // 权益类公司数据\n    var spotCompony = []; // 现货类公司数据\n    var categoryData = []; \n    var barData = [];\n   // 获取历史交易数据\n    myChart.showLoading(); // 显示加载中\n   console.log(\"获取公司白名单*后期补入交易数据\")\n\n   equityCompany =  [2,4,5,4,6,4,8,9,5,2,10,22,15,10,22,12,20,11,14,20,13,11,20,11,20,12,14,15,12,13,10];\n   spotCompony = [2,4,5,4,6,7,8,9,5,2,10,12,5,10,2,12,8,11,14,20,3,11,10,11,10,12,14,5,12,13,10];\n   var count = 0;\n   for (var key in geoCoordMap) {\n        categoryData.push(key);\n        mapData[0].push({\n            \"classes\": 'equityCompany',\n            \"name\": key,\n            \"value\":equityCompany[count]\n        });\n        mapData[1].push({\n            \"classes\": 'SpotCompony',\n            \"name\": key,\n            \"value\": spotCompony[count]\n        });\n        count = count+1;\n    }\n    for (var i = 0; i < mapData.length; i++) {\n        barData.push([]);\n        for (var j = 0; j < mapData[i].length; j++) {\n            barData[i].push(mapData[i][j].value)\n        }\n    }\n   \n    getAllQingApi().then((res) => {\n                console.log(\"传入数据 api/HMM/getAllQing\" + res.data.data)\n                myChart.hideLoading();\n\n                for(var i = 0; i < res.data.data.length;i++){\n                    console.log(res.data.data[i].name)\n                    Management.push(\n                        {\n                            \"name\":res.data.data[i].name,\n                            \"count\":res.data.data[i].count,\n                            \"value\":[res.data.data[i].x,res.data.data[i].y]\n                            })                \n                            }\n                console.log(\"到这里了吗？\"+Management[3].name+Management[3].count+Management[3].value)\n\n                \n\n        // 导入中国地图\n    $.getJSON(uploadedDataURL, function (geoJson) {\n \n        echarts.registerMap('china', geoJson);\n        var convertData = function (data) {\n            var res = [];\n            for (var i = 0; i < data.length; i++) {\n                var geoCoord = geoCoordMap[data[i].name];\n                if (geoCoord) {\n                    res.push({\n                        name: data[i].name,\n                        value: geoCoord.concat(data[i].value)\n                    });\n                }\n            }\n            return res;\n        };\n \n        var convertToLineData = function (data, gps) {\n            var res = [];\n            for (var i = 0; i < data.length; i++) {\n                var dataItem = data[i];\n                var fromCoord = geoCoordMap[dataItem.name];\n                var toCoord = gps; //郑州\n                //  var toCoord = geoGps[Math.random()*3];\n                if (fromCoord && toCoord) {\n                    res.push([{\n                        coord: fromCoord,\n                        value: dataItem.value\n                    }, {\n                        coord: toCoord,\n                    }]);\n                }\n            }\n            return res;\n        };\n        // 下方时间线\n        var optionXyMap01 = {\n            timeline: {\n                data: classes,\n                axisType: 'category',\n                autoPlay: true,\n                playInterval: 5000,\n                left: '10%',\n                right: '10%',\n                bottom: '3%',\n                width: '80%',\n                //  height: null,\n                label: {\n                    normal: {\n                        textStyle: {\n                            color: '#ddd'\n                        }\n                    },\n                    emphasis: {\n                        textStyle: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                symbolSize: 10,\n                lineStyle: {\n                    color: '#555'\n                },\n                checkpointStyle: {\n                    borderColor: '#777',\n                    borderWidth: 2\n                },\n                controlStyle: {\n                    showNextBtn: true,\n                    showPrevBtn: true,\n                    normal: {\n                        color: '#666',\n                        borderColor: '#666'\n                    },\n                    emphasis: {\n                        color: '#aaa',\n                        borderColor: '#aaa'\n                    }\n                },\n \n            },\n            baseOption: {\n                animation: true,\n                animationDuration: 1000,\n                animationEasing: 'cubicInOut',\n                animationDurationUpdate: 1000,\n                animationEasingUpdate: 'cubicInOut',\n                grid: {\n                    right: '1%',\n                    top: '15%',\n                    bottom: '10%',\n                    width: '20%'\n                },\n                tooltip: {\n                    trigger: 'axis', // hover触发器\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                        type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n                        shadowStyle: {\n                            color: 'rgba(150,150,150,0.1)' //hover颜色\n                        }\n                    }\n\n                },\n                geo: {\n                    show: true,\n                    map: 'china',\n                    roam: true,\n                    zoom: 1,\n                    center: [113.83531246, 34.0267395887],\n                    label: {\n                        emphasis: {\n                            show: false\n                        }\n                    },\n                    \n                    itemStyle: {\n                        normal: {\n                            borderColor: 'rgba(147, 235, 248, 1)',\n                            borderWidth: 1,\n                            areaColor: {\n                                type: 'radial',\n                                x: 0.5,\n                                y: 0.5,\n                                r: 0.8,\n                                colorStops: [{\n                                    offset: 0,\n                                    color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\n                                }],\n                                globalCoord: false // 缺省为 false\n                            },\n                            shadowColor: 'rgba(128, 217, 248, 1)',\n                            // shadowColor: 'rgba(255, 255, 255, 1)',\n                            shadowOffsetX: -2,\n                            shadowOffsetY: 2,\n                            shadowBlur: 10\n                        },\n                        emphasis: {\n                            areaColor: '#389BB7',\n                            borderWidth: 0\n                        }\n                    }\n                },\n            },\n            options: []\n \n        };\n        for (var n = 0; n < classes.length; n++) {\n            optionXyMap01.options.push({\n                backgroundColor: '#051b4a',\n                title: [{\n                     text: '全国大宗物流流通情况',\n                     subtext: '目前支持跳转山东，请点击地图中【山东省】位置',\n                     left: 'center',\n                     textStyle: {\n                         color: '#fff',\n                         fontSize: 25\n                     }\n                },\n                    {\n                        id: 'statistic',\n                        text: classes[n] + \"数据统计情况\",\n                        left: '75%',\n                        top: '8%',\n                        textStyle: {\n                            color: '#fff',\n                            fontSize: 20\n                        }\n                    }\n                ],\n                xAxis: {\n                    type: 'value',\n                    scale: true,\n                    position: 'top',\n                    min: 0,\n                    boundaryGap: false,\n                    splitLine: {\n                        show: false\n                    },\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    axisLabel: {\n                        margin: 2,\n                        textStyle: {\n                            color: '#aaa'\n                        }\n                    },\n                },\n                yAxis: {\n                    type: 'category',\n                    //  name: 'TOP 20',\n                    nameGap: 16,\n                    axisLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#ddd'\n                        }\n                    },\n                    axisTick: {\n                        show: false,\n                        lineStyle: {\n                            color: '#ddd'\n                        }\n                    },\n                    axisLabel: {\n                        interval: 0,\n                        textStyle: {\n                            color: '#ddd'\n                        }\n                    },\n                    data: categoryData\n                },\n                series: [\n                    {\n                        //文字和标志\n                        name: 'light',\n                        type: 'scatter',\n                        coordinateSystem: 'geo',\n                        data: convertData(mapData[n]),\n                        symbolSize: function (val) {\n                            return val[2] / 10;\n                        },\n                        label: {\n                            normal: {\n                                formatter: '{b}',\n                                position: 'right',\n                                show: true\n                            },\n                            emphasis: {\n                                show: true\n                            }\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: colors[colorIndex][n]\n                            }\n                        }\n                    },\n                    //地图？\n                    {\n                        type: 'map',\n                        map: 'china',\n                        geoIndex: 0,\n                        aspectScale: 0.75, //长宽比\n                        showLegendSymbol: false, // 存在legend时显示\n                        label: {\n                            normal: {\n                                show: true,\n                            },\n                            emphasis: {\n                                show: false,\n                                textStyle: {\n                                    color: '#fff'\n                                }\n                            }\n                        },\n                        tooltip: {\n                         trigger : 'item',\n                         formatter : '点击获得'+'{b}'+'地区详细信息',\n                         textStyle:{\n                              color : '#000000',\n                              fontSize : 16\n\n                         },\n                         backgroundColor : '#F0F8FF',\n                         borderColor : '#5F9EA0',\n                        },\n                        roam: true,\n                        itemStyle: {\n                            normal: {\n                                areaColor: '#031525',\n                                borderColor: '#FFFFFF',\n                            },\n                            emphasis: {\n                                areaColor: '#2B91B7'\n                            }\n                        },\n                        \n                        animation: false,\n                        data: mapData\n                    },\n                    // 清管所位置标记\n                    {\n                    name: '全国清管所位置分布',\n                    type: 'scatter',\n                    coordinateSystem: 'geo',\n                    zlevel: 2,\n\n                    symbol: 'pin',\n                    label: {\n                        normal: {\n                         show: true,\n                    textStyle: {\n                        color: '#fff',\n                        fontSize: 9,\n                    },\n                    formatter (Management){\n                        return Management.name\n                    }\n                },\n                        emphasis: {\n                            show: true,\n                            fontSize: 15,\n                            color:'#000000',\n                            backgroundColor:'#FFFFFF',\n                            position: 'right',\n                            formatter: '{b}'\n                        }\n                    },\n                    symbolSize: 45,\n                    showEffectOn: 'render',\n                    itemStyle: {\n                        normal: {\n                            color: '#DDA0DD',\n                            opacity:1\n                        }\n                    },\n                    data: Management\n                },\n                    //地图点的动画效果\n                    {\n                        //  name: 'Top 5',\n                        type: 'effectScatter',\n                        coordinateSystem: 'geo',\n                        data: convertData(mapData[n].sort(function (a, b) {\n                            return b.value - a.value;\n                        }).slice(0, 20)),\n                        symbolSize: function (val) {\n                            return val[2] / 10;\n                        },\n                        showEffectOn: 'render',\n                        rippleEffect: {\n                            brushType: 'stroke'\n                        },\n                        hoverAnimation: true,\n                        label: {\n                            normal: {\n                                formatter: '{b}',\n                                position: 'right',\n                                show: true\n                            }\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: colors[colorIndex][n],\n                                shadowBlur: 10,\n                                shadowColor: colors[colorIndex][n]\n                            }\n                        },\n                        zlevel: 1\n                    },\n                    /*\n                    //地图线的动画效果\n                    {\n                        type: 'lines',\n                        zlevel: 2,\n                        effect: {\n                            show: true,\n                            period: 4, //箭头指向速度，值越小速度越快\n                            trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n                            symbol: 'arrow', //箭头图标\n                            symbolSize: 3, //图标大小\n                        },\n                        lineStyle: {\n                            normal: {\n                                color: colors[colorIndex][n],\n                                width: 0.1, //尾迹线条宽度\n                                opacity: 0.5, //尾迹线条透明度\n                                curveness: .3 //尾迹线条曲直度\n                            }\n                        },\n                        data: convertToLineData(mapData[n], geoGpsMap[Math.ceil(Math.random() * 6)])\n                    },*/\n                    //柱状图\n                    {\n                        zlevel: 1.5,\n                        type: 'bar',\n                        symbol: 'none',\n                        itemStyle: {\n                            normal: {\n                                color: colors[colorIndex][n]\n                            }\n                        },\n                        data: barData[n]\n                    }\n                ],\n                legend: {\n                type: \"plain\",\n                show: true,\n                orient: 'vertical',\n                top: '10%',\n                left: '5%',\n                data: [\n                    {\n                        name: \"全国清管所位置分布\",\n                        icon: \"circle\",\n                        textStyle: {\n                            color: \"#F0F8FF\",\n                            fontSize: 20,\n                        }\n                    }\n                ]\n            },\n            })\n        }\n        myChart.setOption(optionXyMap01);\n        myChart.on('click', (params)=>{\n        console.log(\"新的点击事件\"+params.name) \n         if(params.name==\"安徽\"){\n        console.log(\"符合条件\")\n        var url = \"/trade/transactionProject/shandong\";\n        window.location.href=url;\n        }\n        if(params.name==\"山东\"){\n        console.log(\"符合条件\")\n        var url2 = \"/trade/transactionProject/shandong\";\n        window.location.href=url2;\n        }\n        /*\n        var _self = this;\n        if(opt.goDown && params.name !== name[idx]){\n            if(cityMap[params.name]){\n                var url = cityMap[params.name];\n                $.get(url, function(response){\n                    // console.log(response);\n                    curGeoJson = response;\n                    echarts.registerMap(params.name, response);\n                    handleEvents.resetOption(_self, option, params.name);\n                });\n            }\n       }*/\n    });\n    });\n   console.log(\"获取公司白名单成功 \")\n   }).catch(()=>{\n                    console.log(\"getTransactionData fail\")\n                });\n   \n   //console.log(\"equityCompany:\"+equityCompany);\n    /*柱子Y名称\n    权益类公司：equityCompany；\n    现货类公司：SpotCompony\n    */\n});\n \n \nfunction randomNum(minNum, maxNum) {\n    switch (arguments.length) {\n        case 1:\n            return parseInt(Math.random() * minNum + 1, 10);\n        case 2:\n            return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n        default:\n            return 0;\n    }\n}\n \n    }\n  }\n}\n</script>>\n<style scoped>\n*{\n\tmargin: 0;\n\tpadding: 0;\n}\nbody{\n\tfont-family: Exo,'-apple-system','Open Sans',HelveticaNeue-Light,'Helvetica Neue Light','Helvetica Neue','Hiragino Sans GB','Microsoft YaHei',Helvetica,Arial,sans-serif;\n\tcolor: #333;\n}\n\n</style>>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./map.vue?vue&type=template&id=b1ee6a3e&scoped=true&\"\nimport script from \"./map.vue?vue&type=script&lang=js&\"\nexport * from \"./map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./map.vue?vue&type=style&index=0&id=b1ee6a3e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b1ee6a3e\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=style&index=0&id=b1ee6a3e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=style&index=0&id=b1ee6a3e&scoped=true&lang=css&\""],"sourceRoot":""}