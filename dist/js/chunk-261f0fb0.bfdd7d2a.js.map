{"version":3,"sources":["webpack:///./src/api/part1/transactionProject.js","webpack:///./src/components/part1/transactionProject/map.vue?2592","webpack:///src/components/part1/transactionProject/map.vue","webpack:///./src/components/part1/transactionProject/map.vue?03f7","webpack:///./src/components/part1/transactionProject/map.vue","webpack:///./src/components/part1/transactionProject/map.vue?602f"],"names":["Provinces","console","log","request","url","method","getAllWhiteApi","getAllQingApi","getTaskApi","postTaskDecompositionApi","data","getbendiApi","render","_vm","this","_h","$createElement","_c","_self","staticClass","style","width","height","attrs","staticRenderFns","msg","mounted","drawLine","methods","key","spotCompony","count","barData","i","push","mapData","j","value","geoCoord","geoCoordMap","name","classes","axisType","autoPlay","playInterval","left","right","bottom","label","symbolSize","lineStyle","checkpointStyle","controlStyle","animation","animationDuration","animationEasing","animationDurationUpdate","animationEasingUpdate","grid","tooltip","geo","backgroundColor","title","xAxis","yAxis","series","color","fontSize","Management","legend","component"],"mappings":"kHAAA,sOAIO,SAASA,IAEZ,OADFC,QAAQC,IAAI,2CACHC,eAAQ,CACbC,IAAK,mBACLC,OAAQ,QAIL,SAASC,IAEZ,OADFL,QAAQC,IAAI,gDACHC,eAAQ,CACbC,IAAK,mBACLC,OAAQ,QAKP,SAASE,IAEZ,OADFN,QAAQC,IAAI,wCACHC,eAAQ,CACbC,IAAK,kBACLC,OAAQ,QAKL,SAASG,IAEZ,OADFP,QAAQC,IAAI,kBACHC,eAAQ,CACbC,IAAK,QACLC,OAAQ,QAcX,SAASI,EAAyBC,GAErC,OADFT,QAAQC,IAAI,gCACHC,eAAQ,CACbC,IAAK,0BACLC,OAAQ,OACRK,SAIC,SAASC,IAEZ,OADFV,QAAQC,IAAI,mBACHC,eAAQ,CACbC,IAAK,oBACLC,OAAQ,U,2CC7Dd,IAAIO,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACG,MAAM,CAAEC,MAAO,OAAQC,OAAQ,SAAUC,MAAM,CAAC,GAAK,YACzLC,EAAkB,G,kGCWtB,GACE,KAAF,UACEd,KAFF,WAGI,MAAO,CACLe,IAAK,mBAGTC,QAPF,WAQIZ,KAAKa,YAEPC,QAAS,CACPD,SADJ,WAEA,IAWA,2CAGA,oBAYA,KAEA,GACA,wBACA,yBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,uBACA,mBACA,wBACA,4BACA,wBACA,wBACA,wBACA,sBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,2BACA,uBACA,wBACA,yBAGA,GACA,sGACA,oIACA,iHAGA,IAWA,gBACA,wBACA,GACA,GACA,IAGA,KACA,KACA,KACA,KAEA,gBACA,gCAEA,uFACA,kFACA,QACA,eACA,UACA,WACY,QAAW,gBACX,KAAQE,EACR,MAAZ,OAEA,WACY,QAAW,cACX,KAAQA,EACR,MAASC,EAAYC,KAEjC,KAEA,4BACA,WACA,8BACYC,EAAQC,GAAGC,KAAKC,EAAQF,GAAGG,GAAGC,OAI1C,mCACU,QAAV,2CACU,EAAV,cAEU,IAAV,iCACY,QAAZ,yBACY,EAAZ,KACA,CACc,KAAd,oBACc,MAAd,qBACc,MAAd,sCAGU,QAAV,8CAKA,2BAEA,2BAmJA,IAlJA,kBAEA,IADA,SACA,oBACgB,IAAIC,EAAWC,EAAY7B,EAAKuB,GAAGO,MAC/BF,GACF,EAAlB,MACoB,KAApB,UACoB,MAApB,uBAIA,UAsBA,GACA,UACgB5B,KAAM+B,EACNC,SAAU,WACVC,UAAU,EACVC,aAAc,IACdC,KAAM,MACNC,MAAO,MACPC,OAAQ,KACR1B,MAAO,MAEP2B,MAAO,CACL,OAAlB,CACoB,UAApB,CACsB,MAAtB,SAGkB,SAAlB,CACoB,UAApB,CACsB,MAAtB,UAIgBC,WAAY,GACZC,UAAW,CACT,MAAlB,QAEgBC,gBAAiB,CACf,YAAlB,OACkB,YAAlB,GAEgBC,aAAc,CACZ,aAAlB,EACkB,aAAlB,EACkB,OAAlB,CACoB,MAApB,OACoB,YAApB,QAEkB,SAAlB,CACoB,MAApB,OACoB,YAApB,UAKA,YACgBC,WAAW,EACXC,kBAAmB,IACnBC,gBAAiB,aACjBC,wBAAyB,IACzBC,sBAAuB,aACvBC,KAAM,CACJ,MAAlB,KACkB,IAAlB,MACkB,OAAlB,MACkB,MAAlB,OAEgBC,QAAS,CACP,QAAlB,OACkB,YAAlB,CACoB,KAApB,SACoB,YAApB,CACsB,MAAtB,2BAKgBC,IAAK,CACH,MAAlB,EACkB,IAAlB,QACkB,MAAlB,EACkB,KAAlB,EACkB,OAAlB,6BACkB,MAAlB,CACoB,SAApB,CACsB,MAAtB,IAIkB,UAAlB,CACoB,OAApB,CACsB,YAAtB,yBACsB,YAAtB,EACsB,UAAtB,CACwB,KAAxB,SACwB,EAAxB,GACwB,EAAxB,GACwB,EAAxB,GACwB,WAAxB,EAC0B,OAA1B,EAC0B,MAA1B,0BACA,CAC0B,OAA1B,EAC0B,MAA1B,4BAEwB,aAAxB,GAEsB,YAAtB,yBAEsB,eAAtB,EACsB,cAAtB,EACsB,WAAtB,IAEoB,SAApB,CACsB,UAAtB,UACsB,YAAtB,MAKA,YAGA,mBACA,gBACgBC,gBAAiB,UACjBC,MAAO,CAAC,CACN,KAAlB,aACkB,QAAlB,yBACkB,KAAlB,SACkB,UAAlB,CACoB,MAApB,OACoB,SAApB,KAGA,CACkB,GAAlB,YACkB,KAAlB,cACkB,KAAlB,MACkB,IAAlB,KACkB,UAAlB,CACoB,MAApB,OACoB,SAApB,MAIgBC,MAAO,CACL,KAAlB,QACkB,OAAlB,EACkB,SAAlB,MACkB,IAAlB,EACkB,aAAlB,EACkB,UAAlB,CACoB,MAApB,GAEkB,SAAlB,CACoB,MAApB,GAEkB,SAAlB,CACoB,MAApB,GAEkB,UAAlB,CACoB,OAApB,EACoB,UAApB,CACsB,MAAtB,UAIgBC,MAAO,CACL,KAAlB,WAEkB,QAAlB,GACkB,SAAlB,CACoB,MAApB,EACoB,UAApB,CACsB,MAAtB,SAGkB,SAAlB,CACoB,MAApB,EACoB,UAApB,CACsB,MAAtB,SAGkB,UAAlB,CACoB,SAApB,EACoB,UAApB,CACsB,MAAtB,SAGkB,KAAlB,GAEgBC,OAAQ,CACxB,CAEkB,KAAlB,QACkB,KAAlB,UACkB,iBAAlB,MACkB,KAAlB,QACkB,WAAlB,YACoB,OAApB,SAEkB,MAAlB,CACoB,OAApB,CACsB,UAAtB,MACsB,SAAtB,QACsB,MAAtB,GAEoB,SAApB,CACsB,MAAtB,IAGkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,WAKgB,CACE,KAAlB,MACkB,IAAlB,QACkB,SAAlB,EACkB,YAAlB,IACkB,kBAAlB,EACkB,MAAlB,CACoB,OAApB,CACsB,MAAtB,GAEoB,SAApB,CACsB,MAAtB,EACsB,UAAtB,CACwB,MAAxB,UAIkB,QAAlB,CACoB,QAApB,OACoB,UAApB,gBACoB,UAApB,CACsB,MAAtB,UACsB,SAAtB,IAGoB,gBAApB,UACoB,YAApB,WAEkB,MAAlB,EACkB,UAAlB,CACoB,OAApB,CACsB,UAAtB,UACsB,YAAtB,WAEoB,SAApB,CACsB,UAAtB,YAIkB,WAAlB,EACkB,KAAlB,GAGgB,CACE,KAAlB,YACkB,KAAlB,UACkB,iBAAlB,MACkB,OAAlB,EAEkB,OAAlB,MACkB,MAAlB,CACoB,OAApB,CACsB,MAAtB,EACA,WACwBC,MAAO,OACPC,SAAU,GAElC,UANA,SAMA,GACwB,OAAOC,EAAW5B,OAGtB,SAApB,CACsB,MAAtB,EACsB,SAAtB,GACsB,MAAtB,UACsB,gBAAtB,UACsB,SAAtB,QACsB,UAAtB,QAGkB,WAAlB,GACkB,aAAlB,SACkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,UACsB,QAAtB,IAGkB,KAAlB,GAGgB,CAEE,KAAlB,gBACkB,iBAAlB,MACkB,KAAlB,2BACoB,OAApB,mBACA,aACkB,WAAlB,YACoB,OAApB,SAEkB,aAAlB,SACkB,aAAlB,CACoB,UAApB,UAEkB,gBAAlB,EACkB,MAAlB,CACoB,OAApB,CACsB,UAAtB,MACsB,SAAtB,QACsB,MAAtB,IAGkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,QACsB,WAAtB,GACsB,YAAtB,UAGkB,OAAlB,GAyBgB,CACE,OAAlB,IACkB,KAAlB,MACkB,OAAlB,OACkB,UAAlB,CACoB,OAApB,CACsB,MAAtB,UAGkB,KAAlB,OAGgB6B,OAAQ,CACxB,aACA,QACA,kBACA,UACA,UACA,MACA,CACoB,KAApB,YACoB,KAApB,SACoB,UAApB,CACsB,MAAtB,UACsB,SAAtB,SAOA,eACA,0BAEA,GADA,6BACA,cACA,oBACA,2CACA,uBAEA,iBACA,oBACA,2CACA,8BAiBA,6BACA,kBACU,QAAV,wCCzlB2W,I,wBCQvWC,EAAY,eACd,EACA1D,EACAY,GACA,EACA,KACA,WACA,MAIa,aAAA8C,E,oECnBf,yBAAsgB,EAAG","file":"js/chunk-261f0fb0.bfdd7d2a.js","sourcesContent":["import request from '@/utils/request'\r\nimport Axios from 'axios';\r\n\r\n    // 获取省份信息 \r\nexport function Provinces() {\r\n  console.log(\"获取getshengshiApi表格数据 步骤二 发送taskQuery请求 \")\r\n    return request({\r\n      url: '/HMM/getShengshi',\r\n      method: 'get'\r\n        })\r\n  }\r\n  // 获取白名单列表  \r\n  export function getAllWhiteApi() {\r\n    console.log(\"获取getAllWhiteApi表格数据 步骤二 发送getAllWhiteApi请求 \")\r\n      return request({\r\n        url: '/HMM/getAllWhite',\r\n        method: 'get'\r\n          })\r\n    }\r\n\r\n      // 获取清管所列表  \r\n  export function getAllQingApi() {\r\n    console.log(\"获取getAllQing表格数据 步骤二 发送getAllQing请求 \")\r\n      return request({\r\n        url: '/HMM/getAllQing',\r\n        method: 'get'\r\n          })\r\n    }\r\n\r\n    // 获得任务流程图\r\n    export function getTaskApi() {\r\n      console.log(\"获取getTaskApi数据\")\r\n        return request({\r\n          url: '/task',\r\n          method: 'get'\r\n            })\r\n      }\r\n\r\n      // 获得任务分解图\r\n    export function getTaskDecompositionApi() {\r\n      console.log(\"获取getTaskDecompositionApi数据\")\r\n        return request({\r\n          url: '/taskDecomposition',\r\n          method: 'get'\r\n            })\r\n      }\r\n\r\n// 获得分解任务\r\nexport function postTaskDecompositionApi(data) {\r\n  console.log(\"发送postTaskDecompositionApi请求\")\r\n    return request({\r\n      url: '/taskDecompositionInput',\r\n      method: 'post',\r\n      data\r\n        })\r\n  }\r\n// 获得联盟图\r\nexport function getbendiApi() {\r\n  console.log(\"发送getbendiApi请求\")\r\n    return request({\r\n      url: '/hantina/getbendi',\r\n      method: 'get'\r\n        })\r\n  }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Map\"},[_c('div',{style:({width: '100%', height: '800px'}),attrs:{\"id\":\"map\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div class=\"Map\" >\r\n<div id=\"map\" :style=\"{width: '100%', height: '800px'}\"></div>\r\n</div>\r\n</template>>\r\n\r\n<script>\r\nimport $ from 'jQuery'\r\nimport echarts from 'echarts'\r\nimport Axios from 'axios';\r\nimport {getAllQingApi} from \"@/api/part1/transactionProject\";\r\n\r\nexport default {\r\n     name: 'map_geo',\r\n  data () {\r\n    return {\r\n      msg: 'welcome to map'\r\n    }\r\n     },\r\n  mounted(){\r\n    this.drawLine();\r\n     },\r\n  methods: {\r\n    drawLine(){\r\nvar Echarts = {};\r\n \r\n/***\r\n * 加载地图\r\n * @param data\r\n */\r\nEcharts.loadData = function (data) {\r\n \r\n};\r\n \r\n//基于准备好的dom,初始化echarts实例\r\nvar myChart = echarts.init(document.getElementById('map'));\r\n// var uploadedDataURL = \"/static/map_json/data-1528971808162-BkOXf61WX.json\";\r\n// var uploadedDataURL = \"/static/map_json/data-1528969802719-HyXIqhk-m.json\";\r\nvar uploadedDataURL = \"/map/china.json\";\r\n//如果想要修改，请点击上方克隆，然后在自己的版本上修改，不要在lz的版本上改！！\r\n \r\nvar geoGpsMap = {\r\n    '1': [109.1162, 34.2004],\r\n    '2': [116.4551, 40.2539],\r\n    '3': [113.12244, 23.009505],\r\n    '4': [87.9236, 43.5883],\r\n    '5': [127.9688, 45.368],\r\n    '6': [91.11, 29.97],\r\n};\r\n\r\nvar Management = []\r\n// 省份坐标\r\nvar geoCoordMap = {\r\n    '黑龙江': [127.9688, 45.368],\r\n    '内蒙古': [110.3467, 41.4899],\r\n    \"吉林\": [125.8154, 44.2584],\r\n    '北京市': [116.4551, 40.2539],\r\n    \"辽宁\": [123.1238, 42.1216],\r\n    \"河北\": [114.4995, 38.1006],\r\n    \"天津\": [117.4219, 39.4189],\r\n    \"山西\": [112.3352, 37.9413],\r\n    \"陕西\": [109.1162, 34.2004],\r\n    \"甘肃\": [103.5901, 36.3043],\r\n    \"宁夏\": [106.3586, 38.1775],\r\n    \"青海\": [100.4038, 36.8207],\r\n    \"新疆\": [87.9236, 43.5883],\r\n    \"西藏\": [91.11, 29.97],\r\n    \"四川\": [103.9526, 30.7617],\r\n    \"重庆\": [108.384366, 30.439702],\r\n    \"山东\": [117.1582, 36.8701],\r\n    \"河南\": [113.4668, 34.6234],\r\n    \"江苏\": [118.8062, 31.9208],\r\n    \"安徽\": [117.29, 32.0581],\r\n    \"湖北\": [114.3896, 30.6628],\r\n    \"浙江\": [119.5313, 29.8773],\r\n    \"福建\": [119.4543, 25.9222],\r\n    \"江西\": [116.0046, 28.6633],\r\n    \"湖南\": [113.0823, 28.2568],\r\n    \"贵州\": [106.6992, 26.7682],\r\n    \"云南\": [102.9199, 25.4663],\r\n    \"广东\": [113.12244, 23.009505],\r\n    \"广西\": [108.479, 23.1152],\r\n    \"海南\": [110.3893, 19.8516],\r\n    '上海': [121.4648, 31.2891],\r\n};\r\n \r\nvar colors = [\r\n    [\"#1DE9B6\", \"#F46E36\", \"#04B9FF\", \"#5DBD32\", \"#FFC809\", \"#FB95D5\", \"#BDA29A\", \"#6E7074\", \"#546570\", \"#C4CCD3\"],\r\n    [\"#37A2DA\", \"#67E0E3\", \"#32C5E9\", \"#9FE6B8\", \"#FFDB5C\", \"#FF9F7F\", \"#FB7293\", \"#E062AE\", \"#E690D1\", \"#E7BCF3\", \"#9D96F5\", \"#8378EA\", \"#8378EA\"],\r\n    [\"#DD6B66\", \"#759AA0\", \"#E69D87\", \"#8DC1A9\", \"#EA7E53\", \"#EEDD78\", \"#73A373\", \"#73B9BC\", \"#7289AB\", \"#91CA8C\", \"#F49F42\"],\r\n];\r\n \r\nvar colorIndex = 0;\r\n\r\n   \r\n   //var companyVal =[];\r\n   //companyVal = this.companyData;\r\n   //console.log(\"companyVal的内容是\" + companyVal);\r\n   //var equityCompany = [];\r\n   //equityCompany = companyVal[0].value;\r\n   //console.log(\"equityCompany的内容是\" + equityCompany);\r\n\r\n\r\n$(function () {\r\n    var classes = [\"权益类公司\", \"现货类公司\"];\r\n    var mapData = [\r\n        [],\r\n        [],\r\n    ];\r\n    var companyVal = [];\r\n    var equityCompany = []; // 权益类公司数据\r\n    var spotCompony = []; // 现货类公司数据\r\n    var categoryData = []; \r\n    var barData = [];\r\n   // 获取历史交易数据\r\n    myChart.showLoading(); // 显示加载中\r\n   console.log(\"获取公司白名单*后期补入交易数据\")\r\n\r\n   equityCompany =  [2,4,5,4,6,4,8,9,5,2,10,22,15,10,22,12,20,11,14,20,13,11,20,11,20,12,14,15,12,13,10];\r\n   spotCompony = [2,4,5,4,6,7,8,9,5,2,10,12,5,10,2,12,8,11,14,20,3,11,10,11,10,12,14,5,12,13,10];\r\n   var count = 0;\r\n   for (var key in geoCoordMap) {\r\n        categoryData.push(key);\r\n        mapData[0].push({\r\n            \"classes\": 'equityCompany',\r\n            \"name\": key,\r\n            \"value\":equityCompany[count]\r\n        });\r\n        mapData[1].push({\r\n            \"classes\": 'SpotCompony',\r\n            \"name\": key,\r\n            \"value\": spotCompony[count]\r\n        });\r\n        count = count+1;\r\n    }\r\n    for (var i = 0; i < mapData.length; i++) {\r\n        barData.push([]);\r\n        for (var j = 0; j < mapData[i].length; j++) {\r\n            barData[i].push(mapData[i][j].value)\r\n        }\r\n    }\r\n   \r\n    getAllQingApi().then((res) => {\r\n                console.log(\"传入数据 api/HMM/getAllQing\" + res.data.data)\r\n                myChart.hideLoading();\r\n\r\n                for(var i = 0; i < res.data.data.length;i++){\r\n                    console.log(res.data.data[i].name)\r\n                    Management.push(\r\n                        {\r\n                            \"name\":res.data.data[i].name,\r\n                            \"count\":res.data.data[i].count,\r\n                            \"value\":[res.data.data[i].x,res.data.data[i].y]\r\n                            })                \r\n                            }\r\n                console.log(\"到这里了吗？\"+Management[3].name+Management[3].count+Management[3].value)\r\n\r\n                \r\n\r\n        // 导入中国地图\r\n    $.getJSON(uploadedDataURL, function (geoJson) {\r\n \r\n        echarts.registerMap('china', geoJson);\r\n        var convertData = function (data) {\r\n            var res = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var geoCoord = geoCoordMap[data[i].name];\r\n                if (geoCoord) {\r\n                    res.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value)\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n \r\n        var convertToLineData = function (data, gps) {\r\n            var res = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var dataItem = data[i];\r\n                var fromCoord = geoCoordMap[dataItem.name];\r\n                var toCoord = gps; //郑州\r\n                //  var toCoord = geoGps[Math.random()*3];\r\n                if (fromCoord && toCoord) {\r\n                    res.push([{\r\n                        coord: fromCoord,\r\n                        value: dataItem.value\r\n                    }, {\r\n                        coord: toCoord,\r\n                    }]);\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n        // 下方时间线\r\n        var optionXyMap01 = {\r\n            timeline: {\r\n                data: classes,\r\n                axisType: 'category',\r\n                autoPlay: true,\r\n                playInterval: 5000,\r\n                left: '10%',\r\n                right: '10%',\r\n                bottom: '3%',\r\n                width: '80%',\r\n                //  height: null,\r\n                label: {\r\n                    normal: {\r\n                        textStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                symbolSize: 10,\r\n                lineStyle: {\r\n                    color: '#555'\r\n                },\r\n                checkpointStyle: {\r\n                    borderColor: '#777',\r\n                    borderWidth: 2\r\n                },\r\n                controlStyle: {\r\n                    showNextBtn: true,\r\n                    showPrevBtn: true,\r\n                    normal: {\r\n                        color: '#666',\r\n                        borderColor: '#666'\r\n                    },\r\n                    emphasis: {\r\n                        color: '#aaa',\r\n                        borderColor: '#aaa'\r\n                    }\r\n                },\r\n \r\n            },\r\n            baseOption: {\r\n                animation: true,\r\n                animationDuration: 1000,\r\n                animationEasing: 'cubicInOut',\r\n                animationDurationUpdate: 1000,\r\n                animationEasingUpdate: 'cubicInOut',\r\n                grid: {\r\n                    right: '1%',\r\n                    top: '15%',\r\n                    bottom: '10%',\r\n                    width: '20%'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis', // hover触发器\r\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n                        shadowStyle: {\r\n                            color: 'rgba(150,150,150,0.1)' //hover颜色\r\n                        }\r\n                    }\r\n\r\n                },\r\n                geo: {\r\n                    show: true,\r\n                    map: 'china',\r\n                    roam: true,\r\n                    zoom: 1,\r\n                    center: [113.83531246, 34.0267395887],\r\n                    label: {\r\n                        emphasis: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    \r\n                    itemStyle: {\r\n                        normal: {\r\n                            borderColor: 'rgba(147, 235, 248, 1)',\r\n                            borderWidth: 1,\r\n                            areaColor: {\r\n                                type: 'radial',\r\n                                x: 0.5,\r\n                                y: 0.5,\r\n                                r: 0.8,\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\r\n                                }],\r\n                                globalCoord: false // 缺省为 false\r\n                            },\r\n                            shadowColor: 'rgba(128, 217, 248, 1)',\r\n                            // shadowColor: 'rgba(255, 255, 255, 1)',\r\n                            shadowOffsetX: -2,\r\n                            shadowOffsetY: 2,\r\n                            shadowBlur: 10\r\n                        },\r\n                        emphasis: {\r\n                            areaColor: '#389BB7',\r\n                            borderWidth: 0\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n            options: []\r\n \r\n        };\r\n        for (var n = 0; n < classes.length; n++) {\r\n            optionXyMap01.options.push({\r\n                backgroundColor: '#051b4a',\r\n                title: [{\r\n                     text: '全国大宗物流流通情况',\r\n                     subtext: '目前支持跳转山东，请点击地图中【山东省】位置',\r\n                     left: 'center',\r\n                     textStyle: {\r\n                         color: '#fff',\r\n                         fontSize: 25\r\n                     }\r\n                },\r\n                    {\r\n                        id: 'statistic',\r\n                        text: classes[n] + \"数据统计情况\",\r\n                        left: '75%',\r\n                        top: '8%',\r\n                        textStyle: {\r\n                            color: '#fff',\r\n                            fontSize: 20\r\n                        }\r\n                    }\r\n                ],\r\n                xAxis: {\r\n                    type: 'value',\r\n                    scale: true,\r\n                    position: 'top',\r\n                    min: 0,\r\n                    boundaryGap: false,\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                        show: false\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        margin: 2,\r\n                        textStyle: {\r\n                            color: '#aaa'\r\n                        }\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    type: 'category',\r\n                    //  name: 'TOP 20',\r\n                    nameGap: 16,\r\n                    axisLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    axisTick: {\r\n                        show: false,\r\n                        lineStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0,\r\n                        textStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    data: categoryData\r\n                },\r\n                series: [\r\n                    {\r\n                        //文字和标志\r\n                        name: 'light',\r\n                        type: 'scatter',\r\n                        coordinateSystem: 'geo',\r\n                        data: convertData(mapData[n]),\r\n                        symbolSize: function (val) {\r\n                            return val[2] / 10;\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                formatter: '{b}',\r\n                                position: 'right',\r\n                                show: true\r\n                            },\r\n                            emphasis: {\r\n                                show: true\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n]\r\n                            }\r\n                        }\r\n                    },\r\n                    //地图？\r\n                    {\r\n                        type: 'map',\r\n                        map: 'china',\r\n                        geoIndex: 0,\r\n                        aspectScale: 0.75, //长宽比\r\n                        showLegendSymbol: false, // 存在legend时显示\r\n                        label: {\r\n                            normal: {\r\n                                show: true,\r\n                            },\r\n                            emphasis: {\r\n                                show: false,\r\n                                textStyle: {\r\n                                    color: '#fff'\r\n                                }\r\n                            }\r\n                        },\r\n                        tooltip: {\r\n                         trigger : 'item',\r\n                         formatter : '点击获得'+'{b}'+'地区详细信息',\r\n                         textStyle:{\r\n                              color : '#000000',\r\n                              fontSize : 16\r\n\r\n                         },\r\n                         backgroundColor : '#F0F8FF',\r\n                         borderColor : '#5F9EA0',\r\n                        },\r\n                        roam: true,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                areaColor: '#031525',\r\n                                borderColor: '#FFFFFF',\r\n                            },\r\n                            emphasis: {\r\n                                areaColor: '#2B91B7'\r\n                            }\r\n                        },\r\n                        \r\n                        animation: false,\r\n                        data: mapData\r\n                    },\r\n                    // 清管所位置标记\r\n                    {\r\n                    name: '全国清管所位置分布',\r\n                    type: 'scatter',\r\n                    coordinateSystem: 'geo',\r\n                    zlevel: 2,\r\n\r\n                    symbol: 'pin',\r\n                    label: {\r\n                        normal: {\r\n                         show: true,\r\n                    textStyle: {\r\n                        color: '#fff',\r\n                        fontSize: 9,\r\n                    },\r\n                    formatter (Management){\r\n                        return Management.name\r\n                    }\r\n                },\r\n                        emphasis: {\r\n                            show: true,\r\n                            fontSize: 15,\r\n                            color:'#000000',\r\n                            backgroundColor:'#FFFFFF',\r\n                            position: 'right',\r\n                            formatter: '{b}'\r\n                        }\r\n                    },\r\n                    symbolSize: 45,\r\n                    showEffectOn: 'render',\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: '#DDA0DD',\r\n                            opacity:1\r\n                        }\r\n                    },\r\n                    data: Management\r\n                },\r\n                    //地图点的动画效果\r\n                    {\r\n                        //  name: 'Top 5',\r\n                        type: 'effectScatter',\r\n                        coordinateSystem: 'geo',\r\n                        data: convertData(mapData[n].sort(function (a, b) {\r\n                            return b.value - a.value;\r\n                        }).slice(0, 20)),\r\n                        symbolSize: function (val) {\r\n                            return val[2] / 10;\r\n                        },\r\n                        showEffectOn: 'render',\r\n                        rippleEffect: {\r\n                            brushType: 'stroke'\r\n                        },\r\n                        hoverAnimation: true,\r\n                        label: {\r\n                            normal: {\r\n                                formatter: '{b}',\r\n                                position: 'right',\r\n                                show: true\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n],\r\n                                shadowBlur: 10,\r\n                                shadowColor: colors[colorIndex][n]\r\n                            }\r\n                        },\r\n                        zlevel: 1\r\n                    },\r\n                    /*\r\n                    //地图线的动画效果\r\n                    {\r\n                        type: 'lines',\r\n                        zlevel: 2,\r\n                        effect: {\r\n                            show: true,\r\n                            period: 4, //箭头指向速度，值越小速度越快\r\n                            trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\r\n                            symbol: 'arrow', //箭头图标\r\n                            symbolSize: 3, //图标大小\r\n                        },\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n],\r\n                                width: 0.1, //尾迹线条宽度\r\n                                opacity: 0.5, //尾迹线条透明度\r\n                                curveness: .3 //尾迹线条曲直度\r\n                            }\r\n                        },\r\n                        data: convertToLineData(mapData[n], geoGpsMap[Math.ceil(Math.random() * 6)])\r\n                    },*/\r\n                    //柱状图\r\n                    {\r\n                        zlevel: 1.5,\r\n                        type: 'bar',\r\n                        symbol: 'none',\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n]\r\n                            }\r\n                        },\r\n                        data: barData[n]\r\n                    }\r\n                ],\r\n                legend: {\r\n                type: \"plain\",\r\n                show: true,\r\n                orient: 'vertical',\r\n                top: '10%',\r\n                left: '5%',\r\n                data: [\r\n                    {\r\n                        name: \"全国清管所位置分布\",\r\n                        icon: \"circle\",\r\n                        textStyle: {\r\n                            color: \"#F0F8FF\",\r\n                            fontSize: 20,\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            })\r\n        }\r\n        myChart.setOption(optionXyMap01);\r\n        myChart.on('click', (params)=>{\r\n        console.log(\"新的点击事件\"+params.name) \r\n         if(params.name==\"安徽\"){\r\n        console.log(\"符合条件\")\r\n        var url = \"/trade/transactionProject/shandong\";\r\n        window.location.href=url;\r\n        }\r\n        if(params.name==\"山东\"){\r\n        console.log(\"符合条件\")\r\n        var url2 = \"/trade/transactionProject/shandong\";\r\n        window.location.href=url2;\r\n        }\r\n        /*\r\n        var _self = this;\r\n        if(opt.goDown && params.name !== name[idx]){\r\n            if(cityMap[params.name]){\r\n                var url = cityMap[params.name];\r\n                $.get(url, function(response){\r\n                    // console.log(response);\r\n                    curGeoJson = response;\r\n                    echarts.registerMap(params.name, response);\r\n                    handleEvents.resetOption(_self, option, params.name);\r\n                });\r\n            }\r\n       }*/\r\n    });\r\n    });\r\n   console.log(\"获取公司白名单成功 \")\r\n   }).catch(()=>{\r\n                    console.log(\"getTransactionData fail\")\r\n                });\r\n   \r\n   //console.log(\"equityCompany:\"+equityCompany);\r\n    /*柱子Y名称\r\n    权益类公司：equityCompany；\r\n    现货类公司：SpotCompony\r\n    */\r\n});\r\n \r\n \r\nfunction randomNum(minNum, maxNum) {\r\n    switch (arguments.length) {\r\n        case 1:\r\n            return parseInt(Math.random() * minNum + 1, 10);\r\n        case 2:\r\n            return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n \r\n    }\r\n  }\r\n}\r\n</script>>\r\n<style scoped>\r\n*{\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\nbody{\r\n\tfont-family: Exo,'-apple-system','Open Sans',HelveticaNeue-Light,'Helvetica Neue Light','Helvetica Neue','Hiragino Sans GB','Microsoft YaHei',Helvetica,Arial,sans-serif;\r\n\tcolor: #333;\r\n}\r\n\r\n</style>>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./map.vue?vue&type=template&id=0590c1b0&scoped=true&\"\nimport script from \"./map.vue?vue&type=script&lang=js&\"\nexport * from \"./map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./map.vue?vue&type=style&index=0&id=0590c1b0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0590c1b0\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=style&index=0&id=0590c1b0&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map.vue?vue&type=style&index=0&id=0590c1b0&scoped=true&lang=css&\""],"sourceRoot":""}